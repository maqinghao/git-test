先提交文件在关联远程库  需要执行 git pull mh1 master  --allow-unrelated-histories 先把远程仓库的代码拉下来并合并本地仓库 （允许无关历史记录

）
git push -u origin master   u代表什么意思？
关于push：好
（1）将本地仓库与要push的远程仓库关联；
（2）把本地仓库的内容push推送到GitHub远程仓库。

关联远程库命令的格式：git remote add origin git@github.com:仓库地址.git
说明：origin是git默认的远程库叫法，因为我之前已经用过origin这个名字关联其他的远程库了，所以这里的示例我用的是origin0，下面的push操作也相应的是origin0。

push命令的格式：git push origin master
注意：如果你是第一次推送master分支，并且想把本地的master分支和远程的master分支真正地关联起来，建立一个它们之间的连接，可以加上-u参数：git push -u origin master，这样Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令，commit提交后，直接执行push命令：git push origin master就OK，无须再次关联远程库
————————————————
版权声明：本文为CSDN博主「邓小菜」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_33361432/article/details/79919040

git pull origin master 拉取合并远程与本地库

 撤消对文件的修改
如果你并不想保留对 CONTRIBUTING.md 文件的修改怎么办？ 你该如何方便地撤消修改——将它还原成上次提交时的样子（或者刚克隆完的样子，或者刚把它放入工作目录时的样子）？ 幸运的是，git status 也告诉了你应该如何做。 在最后一个例子中，未暂存区域是这样：

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

    modified:   CONTRIBUTING.md
它非常清楚地告诉了你如何撤消之前所做的修改。 让我们来按照提示执行：

$ git checkout -- CONTRIBUTING.md
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

    renamed:    README.md -> README
可以看到那些修改已经被撤消了。

增加u参数第一次提交

GitHub Token: 0f0c46cc5272883ad9c7e4fafe8cdb3c4eb72276
GitHub Gist: 513362c8a04e647fd93e9114f160ae4a
             513362c8a04e647fd93e9114f160ae4a

GitHub Token: 2b4ea76d3a346aecaabea7359c5c3b12ab8b41f7
GitHub Gist: 50576a4dd997bb2453bdfaa2cc29c3f6
GitHub Gist Type: Secret
GitHub Gist Type: Secret
为什么呀？
win3----token---b37ae5e6c95352f886fb8c9ef8a022e70b89e40f
原来是这样的
win3 -- token --2b1078251b3948267e7f46d7befd2d7dfea4b01d
<script src="https://gist.github.com/maqinghao/5ebf8aee0247e64b7148f0ec7a0393b5.js"></script>
win4
GitHub Token: d0b5347c10e5f804a5a607f42a9dd99d06150f69
GitHub Gist: 2db725746c73b21725af9ad8aff5d77e